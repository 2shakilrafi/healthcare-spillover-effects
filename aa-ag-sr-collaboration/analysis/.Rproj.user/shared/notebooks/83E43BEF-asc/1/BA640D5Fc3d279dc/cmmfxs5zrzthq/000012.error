{"frames":[{"func":"data %>% geocode(address = `Facility Name`, method = \"osm\", lat = lat_name, \n    long = lon_name)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"geocode(., address = `Facility Name`, method = \"osm\", lat = lat_name, \n    long = lon_name)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(geo, geo_args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (address = NULL, street = NULL, city = NULL, county = NULL, \n    state = NULL, postalcode = NULL, country = NULL, method = \"osm\", \n    lat = \"lat\", long = \"long\", limit = 1, full_results = FALSE, \n    mode = \"\", unique_only = FALSE, return_addresses = TRUE,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(mapply, single_addr_args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) \n{\n    FUN <- match.fun(FUN)\n    dots <- list(...) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (pb = NULL, ...) \n{\n    results <- geo(...)\n    if (!is.null(pb))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"geo(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"query_api(api_url, api_query_parameters, method = method)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr::GET(api_url, query = query_parameters)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_perform(req, hu$handle$handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch.write_memory(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"curl::curl_fetch_memory(url, handle = handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in moran.test(data_centroids$`ASC-12 RSHV Rate`, lw) : \n  objects of different length\n"}